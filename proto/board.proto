syntax = "proto3";

package board;

option go_package = "neo.board.v1;board_v1";

service BoardService {
  rpc GetBoard (GetBoardRequest) returns (GetBoardResponse);
}
//TODO: сделать запросы менее жирными. Отправлять только то, что нужно для модуля доски
// ____ GET BOARD () ____ //
message GetBoardRequest {
  string id = 1;
  //Сортировка
}
message GetBoardResponse {
  TBoard board = 1;
}

// ____ BOARD TYPES ____ //
message TBoard {
  string id = 1;
  string key = 2; //У задачи должен быть кей
  repeated TColumn columns = 3;
  repeated TSprint sprints = 4;
  repeated TFieldConfig field_configs = 5;
  repeated TCardConfig card_configs = 6;
}

// ____ COLUMN TYPES ____ //
message TColumn {
  string id = 1;
  string name = 2;
  repeated TCurrentStep steps = 3;
  repeated TCard on_board_action = 4;
}
message TCurrentStep {
  string id = 1;
  string name = 2;
  string workflow_status = 3;
}
message TCard {
  string id = 1;
  uint32 order = 2;
  string column_id = 3;
  uint32 action_num = 4;
  string current_step_id = 5;
  repeated string sprint_ids = 6;
  repeated TActionField fields = 7;
}
message TActionField {
  string id = 1;
  string value = 2;
  string config_id = 3;
}

// ____ CONFIG TYPES ____ //
//TODO: отправлять только те поля, которые используются в конфиге доски
message TCardConfig {
  string id = 1;
  uint32 row_order = 2;
  uint32 column_order = 3;
  uint32 size = 4;
  string field_config_id = 5;
}
message TFieldConfig {
  string id = 1;
  string name = 2;
  string alias = 3;
  TFieldType field_type = 4;
  string defaultValue = 5;
  string availableValues = 7;
}

message TFieldType {
  string id = 1;
  string name = 2;
  string alias = 3;
  bool is_custom = 4;
  repeated string available_sizes = 5;
}

// ____ OTHER TYPES ____ //
message TSprint {
  string id = 1;
  string name = 2;
}