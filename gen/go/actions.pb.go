// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.29.3
// source: actions.proto

package actions_v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetBoardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetBoardRequest) Reset() {
	*x = GetBoardRequest{}
	mi := &file_actions_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBoardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBoardRequest) ProtoMessage() {}

func (x *GetBoardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_actions_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBoardRequest.ProtoReflect.Descriptor instead.
func (*GetBoardRequest) Descriptor() ([]byte, []int) {
	return file_actions_proto_rawDescGZIP(), []int{0}
}

func (x *GetBoardRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetBoardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Columns      []*Columns     `protobuf:"bytes,2,rep,name=columns,proto3" json:"columns,omitempty"`
	Cards        []*Cards       `protobuf:"bytes,3,rep,name=cards,proto3" json:"cards,omitempty"`
	FieldConfigs []*FieldConfig `protobuf:"bytes,4,rep,name=field_configs,json=fieldConfigs,proto3" json:"field_configs,omitempty"`
	FieldTypes   []*FieldType   `protobuf:"bytes,5,rep,name=field_types,json=fieldTypes,proto3" json:"field_types,omitempty"`
}

func (x *GetBoardResponse) Reset() {
	*x = GetBoardResponse{}
	mi := &file_actions_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBoardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBoardResponse) ProtoMessage() {}

func (x *GetBoardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_actions_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBoardResponse.ProtoReflect.Descriptor instead.
func (*GetBoardResponse) Descriptor() ([]byte, []int) {
	return file_actions_proto_rawDescGZIP(), []int{1}
}

func (x *GetBoardResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetBoardResponse) GetColumns() []*Columns {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *GetBoardResponse) GetCards() []*Cards {
	if x != nil {
		return x.Cards
	}
	return nil
}

func (x *GetBoardResponse) GetFieldConfigs() []*FieldConfig {
	if x != nil {
		return x.FieldConfigs
	}
	return nil
}

func (x *GetBoardResponse) GetFieldTypes() []*FieldType {
	if x != nil {
		return x.FieldTypes
	}
	return nil
}

type Columns struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *Columns) Reset() {
	*x = Columns{}
	mi := &file_actions_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Columns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Columns) ProtoMessage() {}

func (x *Columns) ProtoReflect() protoreflect.Message {
	mi := &file_actions_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Columns.ProtoReflect.Descriptor instead.
func (*Columns) Descriptor() ([]byte, []int) {
	return file_actions_proto_rawDescGZIP(), []int{2}
}

func (x *Columns) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Columns) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type Cards struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CardMeta   *CardMeta    `protobuf:"bytes,2,opt,name=card_meta,json=cardMeta,proto3" json:"card_meta,omitempty"`
	CardFields []*CardField `protobuf:"bytes,3,rep,name=card_fields,json=cardFields,proto3" json:"card_fields,omitempty"`
}

func (x *Cards) Reset() {
	*x = Cards{}
	mi := &file_actions_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Cards) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cards) ProtoMessage() {}

func (x *Cards) ProtoReflect() protoreflect.Message {
	mi := &file_actions_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cards.ProtoReflect.Descriptor instead.
func (*Cards) Descriptor() ([]byte, []int) {
	return file_actions_proto_rawDescGZIP(), []int{3}
}

func (x *Cards) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Cards) GetCardMeta() *CardMeta {
	if x != nil {
		return x.CardMeta
	}
	return nil
}

func (x *Cards) GetCardFields() []*CardField {
	if x != nil {
		return x.CardFields
	}
	return nil
}

type CardMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BoardID   string `protobuf:"bytes,1,opt,name=boardID,proto3" json:"boardID,omitempty"`
	ColumnID  string `protobuf:"bytes,2,opt,name=columnID,proto3" json:"columnID,omitempty"`
	Order     int32  `protobuf:"varint,3,opt,name=order,proto3" json:"order,omitempty"`
	CreatedBy string `protobuf:"bytes,4,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	CreatedAt string `protobuf:"bytes,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedBy string `protobuf:"bytes,6,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	UpdatedAt string `protobuf:"bytes,7,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	Type      string `protobuf:"bytes,8,opt,name=type,proto3" json:"type,omitempty"`
	Project   string `protobuf:"bytes,9,opt,name=project,proto3" json:"project,omitempty"`
	Sprint    string `protobuf:"bytes,10,opt,name=sprint,proto3" json:"sprint,omitempty"`
}

func (x *CardMeta) Reset() {
	*x = CardMeta{}
	mi := &file_actions_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CardMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardMeta) ProtoMessage() {}

func (x *CardMeta) ProtoReflect() protoreflect.Message {
	mi := &file_actions_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardMeta.ProtoReflect.Descriptor instead.
func (*CardMeta) Descriptor() ([]byte, []int) {
	return file_actions_proto_rawDescGZIP(), []int{4}
}

func (x *CardMeta) GetBoardID() string {
	if x != nil {
		return x.BoardID
	}
	return ""
}

func (x *CardMeta) GetColumnID() string {
	if x != nil {
		return x.ColumnID
	}
	return ""
}

func (x *CardMeta) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *CardMeta) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *CardMeta) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *CardMeta) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *CardMeta) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *CardMeta) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CardMeta) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *CardMeta) GetSprint() string {
	if x != nil {
		return x.Sprint
	}
	return ""
}

type CardField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ConfigID string   `protobuf:"bytes,2,opt,name=configID,proto3" json:"configID,omitempty"`
	Values   []string `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"` //TODO: Что значит [packed=true]?
}

func (x *CardField) Reset() {
	*x = CardField{}
	mi := &file_actions_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CardField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardField) ProtoMessage() {}

func (x *CardField) ProtoReflect() protoreflect.Message {
	mi := &file_actions_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardField.ProtoReflect.Descriptor instead.
func (*CardField) Descriptor() ([]byte, []int) {
	return file_actions_proto_rawDescGZIP(), []int{5}
}

func (x *CardField) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CardField) GetConfigID() string {
	if x != nil {
		return x.ConfigID
	}
	return ""
}

func (x *CardField) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type FieldConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string           `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Alias           string           `protobuf:"bytes,3,opt,name=alias,proto3" json:"alias,omitempty"`
	ValueTypeID     string           `protobuf:"bytes,4,opt,name=valueTypeID,proto3" json:"valueTypeID,omitempty"`
	DefaultValue    string           `protobuf:"bytes,5,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	ValueSource     string           `protobuf:"bytes,6,opt,name=valueSource,proto3" json:"valueSource,omitempty"`
	AvailableValues []string         `protobuf:"bytes,7,rep,name=availableValues,proto3" json:"availableValues,omitempty"`
	Visual          *CardFieldVisual `protobuf:"bytes,8,opt,name=visual,proto3" json:"visual,omitempty"`
}

func (x *FieldConfig) Reset() {
	*x = FieldConfig{}
	mi := &file_actions_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FieldConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldConfig) ProtoMessage() {}

func (x *FieldConfig) ProtoReflect() protoreflect.Message {
	mi := &file_actions_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldConfig.ProtoReflect.Descriptor instead.
func (*FieldConfig) Descriptor() ([]byte, []int) {
	return file_actions_proto_rawDescGZIP(), []int{6}
}

func (x *FieldConfig) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FieldConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FieldConfig) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *FieldConfig) GetValueTypeID() string {
	if x != nil {
		return x.ValueTypeID
	}
	return ""
}

func (x *FieldConfig) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

func (x *FieldConfig) GetValueSource() string {
	if x != nil {
		return x.ValueSource
	}
	return ""
}

func (x *FieldConfig) GetAvailableValues() []string {
	if x != nil {
		return x.AvailableValues
	}
	return nil
}

func (x *FieldConfig) GetVisual() *CardFieldVisual {
	if x != nil {
		return x.Visual
	}
	return nil
}

type CardFieldVisual struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Board *CardFieldVisualOnBoard `protobuf:"bytes,1,opt,name=board,proto3" json:"board,omitempty"`
	Modal *CardFieldVisualInModal `protobuf:"bytes,2,opt,name=modal,proto3" json:"modal,omitempty"`
}

func (x *CardFieldVisual) Reset() {
	*x = CardFieldVisual{}
	mi := &file_actions_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CardFieldVisual) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardFieldVisual) ProtoMessage() {}

func (x *CardFieldVisual) ProtoReflect() protoreflect.Message {
	mi := &file_actions_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardFieldVisual.ProtoReflect.Descriptor instead.
func (*CardFieldVisual) Descriptor() ([]byte, []int) {
	return file_actions_proto_rawDescGZIP(), []int{7}
}

func (x *CardFieldVisual) GetBoard() *CardFieldVisualOnBoard {
	if x != nil {
		return x.Board
	}
	return nil
}

func (x *CardFieldVisual) GetModal() *CardFieldVisualInModal {
	if x != nil {
		return x.Modal
	}
	return nil
}

type CardFieldVisualOnBoard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RowOrder    int32 `protobuf:"varint,1,opt,name=row_order,json=rowOrder,proto3" json:"row_order,omitempty"`
	ColumnOrder int32 `protobuf:"varint,2,opt,name=column_order,json=columnOrder,proto3" json:"column_order,omitempty"`
	Size        int32 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *CardFieldVisualOnBoard) Reset() {
	*x = CardFieldVisualOnBoard{}
	mi := &file_actions_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CardFieldVisualOnBoard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardFieldVisualOnBoard) ProtoMessage() {}

func (x *CardFieldVisualOnBoard) ProtoReflect() protoreflect.Message {
	mi := &file_actions_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardFieldVisualOnBoard.ProtoReflect.Descriptor instead.
func (*CardFieldVisualOnBoard) Descriptor() ([]byte, []int) {
	return file_actions_proto_rawDescGZIP(), []int{8}
}

func (x *CardFieldVisualOnBoard) GetRowOrder() int32 {
	if x != nil {
		return x.RowOrder
	}
	return 0
}

func (x *CardFieldVisualOnBoard) GetColumnOrder() int32 {
	if x != nil {
		return x.ColumnOrder
	}
	return 0
}

func (x *CardFieldVisualOnBoard) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type CardFieldVisualInModal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryID string `protobuf:"bytes,1,opt,name=categoryID,proto3" json:"categoryID,omitempty"`
	Order      int32  `protobuf:"varint,2,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *CardFieldVisualInModal) Reset() {
	*x = CardFieldVisualInModal{}
	mi := &file_actions_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CardFieldVisualInModal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardFieldVisualInModal) ProtoMessage() {}

func (x *CardFieldVisualInModal) ProtoReflect() protoreflect.Message {
	mi := &file_actions_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardFieldVisualInModal.ProtoReflect.Descriptor instead.
func (*CardFieldVisualInModal) Descriptor() ([]byte, []int) {
	return file_actions_proto_rawDescGZIP(), []int{9}
}

func (x *CardFieldVisualInModal) GetCategoryID() string {
	if x != nil {
		return x.CategoryID
	}
	return ""
}

func (x *CardFieldVisualInModal) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

type FieldType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Alias          string  `protobuf:"bytes,3,opt,name=alias,proto3" json:"alias,omitempty"`
	IsCustom       bool    `protobuf:"varint,4,opt,name=is_custom,json=isCustom,proto3" json:"is_custom,omitempty"`
	AvailableSizes []int32 `protobuf:"varint,5,rep,packed,name=available_sizes,json=availableSizes,proto3" json:"available_sizes,omitempty"`
}

func (x *FieldType) Reset() {
	*x = FieldType{}
	mi := &file_actions_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FieldType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldType) ProtoMessage() {}

func (x *FieldType) ProtoReflect() protoreflect.Message {
	mi := &file_actions_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldType.ProtoReflect.Descriptor instead.
func (*FieldType) Descriptor() ([]byte, []int) {
	return file_actions_proto_rawDescGZIP(), []int{10}
}

func (x *FieldType) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FieldType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FieldType) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *FieldType) GetIsCustom() bool {
	if x != nil {
		return x.IsCustom
	}
	return false
}

func (x *FieldType) GetAvailableSizes() []int32 {
	if x != nil {
		return x.AvailableSizes
	}
	return nil
}

var File_actions_proto protoreflect.FileDescriptor

var file_actions_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x21, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x42,
	0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xe4, 0x01, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x2a, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x73, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x24, 0x0a, 0x05,
	0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x73, 0x52, 0x05, 0x63, 0x61, 0x72,
	0x64, 0x73, 0x12, 0x39, 0x0a, 0x0d, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x0c, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0x33, 0x0a,
	0x0b, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x22, 0x2f, 0x0a, 0x07, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x22, 0x7c, 0x0a, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x09,
	0x63, 0x61, 0x72, 0x64, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x65,
	0x74, 0x61, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x33, 0x0a, 0x0b,
	0x63, 0x61, 0x72, 0x64, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x61, 0x72, 0x64,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x22, 0x94, 0x02, 0x0a, 0x08, 0x43, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x18,
	0x0a, 0x07, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x22, 0x4f, 0x0a, 0x09, 0x43, 0x61, 0x72, 0x64,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x8b, 0x02, 0x0a, 0x0b, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c,
	0x69, 0x61, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x06, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x43, 0x61, 0x72, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x52,
	0x06, 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x22, 0x7f, 0x0a, 0x0f, 0x43, 0x61, 0x72, 0x64, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x56, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x12, 0x35, 0x0a, 0x05, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x69, 0x73,
	0x75, 0x61, 0x6c, 0x4f, 0x6e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x05, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x12, 0x35, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x56, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x49, 0x6e, 0x4d, 0x6f, 0x64, 0x61,
	0x6c, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x61, 0x6c, 0x22, 0x6c, 0x0a, 0x16, 0x43, 0x61, 0x72, 0x64,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x4f, 0x6e, 0x42, 0x6f, 0x61,
	0x72, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x77, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x6f, 0x77, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x4e, 0x0a, 0x16, 0x43, 0x61, 0x72, 0x64, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x56, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x49, 0x6e, 0x4d, 0x6f, 0x64, 0x61, 0x6c,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x8f, 0x01, 0x0a, 0x09, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x73, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x69, 0x73, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x12, 0x2b, 0x0a, 0x0f, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x05, 0x42, 0x02, 0x10, 0x01, 0x52, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x73, 0x32, 0x4a, 0x0a, 0x07, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x3f, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x12,
	0x18, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x1b, 0x5a, 0x19, 0x6e, 0x65, 0x6f, 0x2e, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x3b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_actions_proto_rawDescOnce sync.Once
	file_actions_proto_rawDescData = file_actions_proto_rawDesc
)

func file_actions_proto_rawDescGZIP() []byte {
	file_actions_proto_rawDescOnce.Do(func() {
		file_actions_proto_rawDescData = protoimpl.X.CompressGZIP(file_actions_proto_rawDescData)
	})
	return file_actions_proto_rawDescData
}

var file_actions_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_actions_proto_goTypes = []any{
	(*GetBoardRequest)(nil),        // 0: actions.GetBoardRequest
	(*GetBoardResponse)(nil),       // 1: actions.GetBoardResponse
	(*Columns)(nil),                // 2: actions.Columns
	(*Cards)(nil),                  // 3: actions.Cards
	(*CardMeta)(nil),               // 4: actions.CardMeta
	(*CardField)(nil),              // 5: actions.CardField
	(*FieldConfig)(nil),            // 6: actions.FieldConfig
	(*CardFieldVisual)(nil),        // 7: actions.CardFieldVisual
	(*CardFieldVisualOnBoard)(nil), // 8: actions.CardFieldVisualOnBoard
	(*CardFieldVisualInModal)(nil), // 9: actions.CardFieldVisualInModal
	(*FieldType)(nil),              // 10: actions.FieldType
}
var file_actions_proto_depIdxs = []int32{
	2,  // 0: actions.GetBoardResponse.columns:type_name -> actions.Columns
	3,  // 1: actions.GetBoardResponse.cards:type_name -> actions.Cards
	6,  // 2: actions.GetBoardResponse.field_configs:type_name -> actions.FieldConfig
	10, // 3: actions.GetBoardResponse.field_types:type_name -> actions.FieldType
	4,  // 4: actions.Cards.card_meta:type_name -> actions.CardMeta
	5,  // 5: actions.Cards.card_fields:type_name -> actions.CardField
	7,  // 6: actions.FieldConfig.visual:type_name -> actions.CardFieldVisual
	8,  // 7: actions.CardFieldVisual.board:type_name -> actions.CardFieldVisualOnBoard
	9,  // 8: actions.CardFieldVisual.modal:type_name -> actions.CardFieldVisualInModal
	0,  // 9: actions.Actions.GetBoard:input_type -> actions.GetBoardRequest
	1,  // 10: actions.Actions.GetBoard:output_type -> actions.GetBoardResponse
	10, // [10:11] is the sub-list for method output_type
	9,  // [9:10] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_actions_proto_init() }
func file_actions_proto_init() {
	if File_actions_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_actions_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_actions_proto_goTypes,
		DependencyIndexes: file_actions_proto_depIdxs,
		MessageInfos:      file_actions_proto_msgTypes,
	}.Build()
	File_actions_proto = out.File
	file_actions_proto_rawDesc = nil
	file_actions_proto_goTypes = nil
	file_actions_proto_depIdxs = nil
}
