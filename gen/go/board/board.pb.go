// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.29.3
// source: board.proto

package board_v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TODO: сделать запросы менее жирными. Отправлять только то, что нужно для модуля доски
// ____ GET BOARD () ____ //
type GetBoardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` //Сортировка
}

func (x *GetBoardRequest) Reset() {
	*x = GetBoardRequest{}
	mi := &file_board_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBoardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBoardRequest) ProtoMessage() {}

func (x *GetBoardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBoardRequest.ProtoReflect.Descriptor instead.
func (*GetBoardRequest) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{0}
}

func (x *GetBoardRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetBoardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Board *TBoard `protobuf:"bytes,1,opt,name=board,proto3" json:"board,omitempty"`
}

func (x *GetBoardResponse) Reset() {
	*x = GetBoardResponse{}
	mi := &file_board_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBoardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBoardResponse) ProtoMessage() {}

func (x *GetBoardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBoardResponse.ProtoReflect.Descriptor instead.
func (*GetBoardResponse) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{1}
}

func (x *GetBoardResponse) GetBoard() *TBoard {
	if x != nil {
		return x.Board
	}
	return nil
}

// ____ BOARD TYPES ____ //
type TBoard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Key          string          `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Columns      []*TColumn      `protobuf:"bytes,3,rep,name=columns,proto3" json:"columns,omitempty"`
	Sprints      []*TSprint      `protobuf:"bytes,4,rep,name=sprints,proto3" json:"sprints,omitempty"`
	FieldConfigs []*TFieldConfig `protobuf:"bytes,5,rep,name=field_configs,json=fieldConfigs,proto3" json:"field_configs,omitempty"`
	CardConfigs  []*TCardConfig  `protobuf:"bytes,6,rep,name=card_configs,json=cardConfigs,proto3" json:"card_configs,omitempty"`
}

func (x *TBoard) Reset() {
	*x = TBoard{}
	mi := &file_board_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TBoard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TBoard) ProtoMessage() {}

func (x *TBoard) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TBoard.ProtoReflect.Descriptor instead.
func (*TBoard) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{2}
}

func (x *TBoard) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TBoard) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *TBoard) GetColumns() []*TColumn {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *TBoard) GetSprints() []*TSprint {
	if x != nil {
		return x.Sprints
	}
	return nil
}

func (x *TBoard) GetFieldConfigs() []*TFieldConfig {
	if x != nil {
		return x.FieldConfigs
	}
	return nil
}

func (x *TBoard) GetCardConfigs() []*TCardConfig {
	if x != nil {
		return x.CardConfigs
	}
	return nil
}

// ____ COLUMN TYPES ____ //
type TColumn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Steps         []*TCurrentStep `protobuf:"bytes,3,rep,name=steps,proto3" json:"steps,omitempty"`
	OnBoardAction []*TCard        `protobuf:"bytes,4,rep,name=on_board_action,json=onBoardAction,proto3" json:"on_board_action,omitempty"`
}

func (x *TColumn) Reset() {
	*x = TColumn{}
	mi := &file_board_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TColumn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TColumn) ProtoMessage() {}

func (x *TColumn) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TColumn.ProtoReflect.Descriptor instead.
func (*TColumn) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{3}
}

func (x *TColumn) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TColumn) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TColumn) GetSteps() []*TCurrentStep {
	if x != nil {
		return x.Steps
	}
	return nil
}

func (x *TColumn) GetOnBoardAction() []*TCard {
	if x != nil {
		return x.OnBoardAction
	}
	return nil
}

type TCurrentStep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	WorkflowStatus string `protobuf:"bytes,3,opt,name=workflow_status,json=workflowStatus,proto3" json:"workflow_status,omitempty"`
}

func (x *TCurrentStep) Reset() {
	*x = TCurrentStep{}
	mi := &file_board_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TCurrentStep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TCurrentStep) ProtoMessage() {}

func (x *TCurrentStep) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TCurrentStep.ProtoReflect.Descriptor instead.
func (*TCurrentStep) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{4}
}

func (x *TCurrentStep) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TCurrentStep) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TCurrentStep) GetWorkflowStatus() string {
	if x != nil {
		return x.WorkflowStatus
	}
	return ""
}

type TCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Order         uint32          `protobuf:"varint,2,opt,name=order,proto3" json:"order,omitempty"`
	ColumnId      string          `protobuf:"bytes,3,opt,name=column_id,json=columnId,proto3" json:"column_id,omitempty"`
	ActionNum     uint32          `protobuf:"varint,4,opt,name=action_num,json=actionNum,proto3" json:"action_num,omitempty"`
	CurrentStepId string          `protobuf:"bytes,5,opt,name=current_step_id,json=currentStepId,proto3" json:"current_step_id,omitempty"`
	SprintIds     []string        `protobuf:"bytes,6,rep,name=sprint_ids,json=sprintIds,proto3" json:"sprint_ids,omitempty"`
	Fields        []*TActionField `protobuf:"bytes,7,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *TCard) Reset() {
	*x = TCard{}
	mi := &file_board_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TCard) ProtoMessage() {}

func (x *TCard) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TCard.ProtoReflect.Descriptor instead.
func (*TCard) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{5}
}

func (x *TCard) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TCard) GetOrder() uint32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *TCard) GetColumnId() string {
	if x != nil {
		return x.ColumnId
	}
	return ""
}

func (x *TCard) GetActionNum() uint32 {
	if x != nil {
		return x.ActionNum
	}
	return 0
}

func (x *TCard) GetCurrentStepId() string {
	if x != nil {
		return x.CurrentStepId
	}
	return ""
}

func (x *TCard) GetSprintIds() []string {
	if x != nil {
		return x.SprintIds
	}
	return nil
}

func (x *TCard) GetFields() []*TActionField {
	if x != nil {
		return x.Fields
	}
	return nil
}

type TActionField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Value    string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	ConfigId string `protobuf:"bytes,3,opt,name=config_id,json=configId,proto3" json:"config_id,omitempty"`
}

func (x *TActionField) Reset() {
	*x = TActionField{}
	mi := &file_board_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TActionField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TActionField) ProtoMessage() {}

func (x *TActionField) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TActionField.ProtoReflect.Descriptor instead.
func (*TActionField) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{6}
}

func (x *TActionField) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TActionField) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *TActionField) GetConfigId() string {
	if x != nil {
		return x.ConfigId
	}
	return ""
}

// ____ CONFIG TYPES ____ //
// TODO: отправлять только те поля, которые используются в конфиге доски
type TCardConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RowOrder      uint32 `protobuf:"varint,2,opt,name=row_order,json=rowOrder,proto3" json:"row_order,omitempty"`
	ColumnOrder   uint32 `protobuf:"varint,3,opt,name=column_order,json=columnOrder,proto3" json:"column_order,omitempty"`
	Size          uint32 `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	FieldConfigId string `protobuf:"bytes,5,opt,name=field_config_id,json=fieldConfigId,proto3" json:"field_config_id,omitempty"`
}

func (x *TCardConfig) Reset() {
	*x = TCardConfig{}
	mi := &file_board_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TCardConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TCardConfig) ProtoMessage() {}

func (x *TCardConfig) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TCardConfig.ProtoReflect.Descriptor instead.
func (*TCardConfig) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{7}
}

func (x *TCardConfig) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TCardConfig) GetRowOrder() uint32 {
	if x != nil {
		return x.RowOrder
	}
	return 0
}

func (x *TCardConfig) GetColumnOrder() uint32 {
	if x != nil {
		return x.ColumnOrder
	}
	return 0
}

func (x *TCardConfig) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *TCardConfig) GetFieldConfigId() string {
	if x != nil {
		return x.FieldConfigId
	}
	return ""
}

type TFieldConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Alias           string      `protobuf:"bytes,3,opt,name=alias,proto3" json:"alias,omitempty"`
	FieldType       *TFieldType `protobuf:"bytes,4,opt,name=field_type,json=fieldType,proto3" json:"field_type,omitempty"`
	DefaultValue    string      `protobuf:"bytes,5,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	AvailableValues string      `protobuf:"bytes,7,opt,name=availableValues,proto3" json:"availableValues,omitempty"`
}

func (x *TFieldConfig) Reset() {
	*x = TFieldConfig{}
	mi := &file_board_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TFieldConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TFieldConfig) ProtoMessage() {}

func (x *TFieldConfig) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TFieldConfig.ProtoReflect.Descriptor instead.
func (*TFieldConfig) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{8}
}

func (x *TFieldConfig) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TFieldConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TFieldConfig) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *TFieldConfig) GetFieldType() *TFieldType {
	if x != nil {
		return x.FieldType
	}
	return nil
}

func (x *TFieldConfig) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

func (x *TFieldConfig) GetAvailableValues() string {
	if x != nil {
		return x.AvailableValues
	}
	return ""
}

type TFieldType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Alias          string   `protobuf:"bytes,3,opt,name=alias,proto3" json:"alias,omitempty"`
	IsCustom       bool     `protobuf:"varint,4,opt,name=is_custom,json=isCustom,proto3" json:"is_custom,omitempty"`
	AvailableSizes []string `protobuf:"bytes,5,rep,name=available_sizes,json=availableSizes,proto3" json:"available_sizes,omitempty"`
}

func (x *TFieldType) Reset() {
	*x = TFieldType{}
	mi := &file_board_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TFieldType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TFieldType) ProtoMessage() {}

func (x *TFieldType) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TFieldType.ProtoReflect.Descriptor instead.
func (*TFieldType) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{9}
}

func (x *TFieldType) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TFieldType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TFieldType) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *TFieldType) GetIsCustom() bool {
	if x != nil {
		return x.IsCustom
	}
	return false
}

func (x *TFieldType) GetAvailableSizes() []string {
	if x != nil {
		return x.AvailableSizes
	}
	return nil
}

// ____ OTHER TYPES ____ //
type TSprint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *TSprint) Reset() {
	*x = TSprint{}
	mi := &file_board_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TSprint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TSprint) ProtoMessage() {}

func (x *TSprint) ProtoReflect() protoreflect.Message {
	mi := &file_board_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TSprint.ProtoReflect.Descriptor instead.
func (*TSprint) Descriptor() ([]byte, []int) {
	return file_board_proto_rawDescGZIP(), []int{10}
}

func (x *TSprint) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_board_proto protoreflect.FileDescriptor

var file_board_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x22, 0x21, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x37, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x42, 0x6f,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x2e, 0x54, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x05, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x22, 0xef, 0x01, 0x0a, 0x06, 0x54, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a,
	0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x54, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x07,
	0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x28, 0x0a, 0x07, 0x73, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x2e, 0x54, 0x53, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x52, 0x07, 0x73, 0x70, 0x72, 0x69, 0x6e, 0x74,
	0x73, 0x12, 0x38, 0x0a, 0x0d, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x2e, 0x54, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0c, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0x35, 0x0a, 0x0c, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x54, 0x43, 0x61, 0x72, 0x64, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x73, 0x22, 0x8e, 0x01, 0x0a, 0x07, 0x54, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x54, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x65, 0x70, 0x52, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x12, 0x34, 0x0a,
	0x0f, 0x6f, 0x6e, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x54,
	0x43, 0x61, 0x72, 0x64, 0x52, 0x0d, 0x6f, 0x6e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x5b, 0x0a, 0x0c, 0x54, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x65, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0xdd, 0x01, 0x0a, 0x05, 0x54, 0x43, 0x61, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x26, 0x0a, 0x0f,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x65, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x65, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x70, 0x72, 0x69, 0x6e, 0x74,
	0x49, 0x64, 0x73, 0x12, 0x2b, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x54, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x22, 0x51, 0x0a, 0x0c, 0x54, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x49, 0x64, 0x22, 0x99, 0x01, 0x0a, 0x0b, 0x54, 0x43, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x77, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x6f, 0x77, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x22,
	0xc8, 0x01, 0x0a, 0x0c, 0x54, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x30, 0x0a, 0x0a, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x54, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x8c, 0x01, 0x0a, 0x0a, 0x54,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c,
	0x69, 0x61, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x12, 0x27, 0x0a, 0x0f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x73, 0x22, 0x1d, 0x0a, 0x07, 0x54, 0x53, 0x70,
	0x72, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x32, 0x4b, 0x0a, 0x0c, 0x42, 0x6f, 0x61, 0x72,
	0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x42,
	0x6f, 0x61, 0x72, 0x64, 0x12, 0x16, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x47, 0x65, 0x74,
	0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x17, 0x5a, 0x15, 0x6e, 0x65, 0x6f, 0x2e, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x2e, 0x76, 0x31, 0x3b, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_board_proto_rawDescOnce sync.Once
	file_board_proto_rawDescData = file_board_proto_rawDesc
)

func file_board_proto_rawDescGZIP() []byte {
	file_board_proto_rawDescOnce.Do(func() {
		file_board_proto_rawDescData = protoimpl.X.CompressGZIP(file_board_proto_rawDescData)
	})
	return file_board_proto_rawDescData
}

var file_board_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_board_proto_goTypes = []any{
	(*GetBoardRequest)(nil),  // 0: board.GetBoardRequest
	(*GetBoardResponse)(nil), // 1: board.GetBoardResponse
	(*TBoard)(nil),           // 2: board.TBoard
	(*TColumn)(nil),          // 3: board.TColumn
	(*TCurrentStep)(nil),     // 4: board.TCurrentStep
	(*TCard)(nil),            // 5: board.TCard
	(*TActionField)(nil),     // 6: board.TActionField
	(*TCardConfig)(nil),      // 7: board.TCardConfig
	(*TFieldConfig)(nil),     // 8: board.TFieldConfig
	(*TFieldType)(nil),       // 9: board.TFieldType
	(*TSprint)(nil),          // 10: board.TSprint
}
var file_board_proto_depIdxs = []int32{
	2,  // 0: board.GetBoardResponse.board:type_name -> board.TBoard
	3,  // 1: board.TBoard.columns:type_name -> board.TColumn
	10, // 2: board.TBoard.sprints:type_name -> board.TSprint
	8,  // 3: board.TBoard.field_configs:type_name -> board.TFieldConfig
	7,  // 4: board.TBoard.card_configs:type_name -> board.TCardConfig
	4,  // 5: board.TColumn.steps:type_name -> board.TCurrentStep
	5,  // 6: board.TColumn.on_board_action:type_name -> board.TCard
	6,  // 7: board.TCard.fields:type_name -> board.TActionField
	9,  // 8: board.TFieldConfig.field_type:type_name -> board.TFieldType
	0,  // 9: board.BoardService.GetBoard:input_type -> board.GetBoardRequest
	1,  // 10: board.BoardService.GetBoard:output_type -> board.GetBoardResponse
	10, // [10:11] is the sub-list for method output_type
	9,  // [9:10] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_board_proto_init() }
func file_board_proto_init() {
	if File_board_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_board_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_board_proto_goTypes,
		DependencyIndexes: file_board_proto_depIdxs,
		MessageInfos:      file_board_proto_msgTypes,
	}.Build()
	File_board_proto = out.File
	file_board_proto_rawDesc = nil
	file_board_proto_goTypes = nil
	file_board_proto_depIdxs = nil
}
